services:
    app:
        container_name: bot-app
        build:
#            context: docker/development
            dockerfile: docker/production/bot-app.dockerfile
        image: ${REGISTRY_HOST}/${REGISTRY_ADDRESS}/${IMAGE_NAME_FOR_BOT}:${IMAGE_TAG}
        restart: always
        environment:
            - PROD=1
            - DATABASE=postgres
            - TZ=Europe/Moscow
        volumes:
            - ./logs:/app/logs
        env_file:
            - .env
            - .env.prod
        depends_on:
            - postgres

    schedule-app:
        container_name: schedule-app
        build:
            #            context: docker/development
            dockerfile: docker/production/schedule-app.dockerfile
        image: ${REGISTRY_HOST}/${REGISTRY_ADDRESS}/${IMAGE_NAME_FOR_SCHEDULE_APP}:${IMAGE_TAG}
        restart: always
        environment:
            - PROD=1
            - DATABASE=postgres
            - TZ=Europe/Moscow
        volumes:
            - ./logs:/app/logs
        env_file:
            - .env
            - .env.prod
        depends_on:
            - postgres

    postgres:
        container_name: postgres-14
        image: postgres:14.0-alpine
        restart: always
        env_file:
            - .env
            - .env.prod
        volumes:
            - postgres-volume:/var/lib/postgresql/data/
        ports:
            - "5432:5432"

volumes:
    postgres-volume: